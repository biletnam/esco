<?php

namespace common\models;

use Yii;

/**
 * This is the model class for table "task_queue".
 *
 * @property integer $id
 * @property integer $client_id
 * @property string $raw_task
 * @property string $class
 * @property string $action
 * @property integer $status
 * @property string $created_at
 * @property string $params
 */
class TaskQueue extends \yii\db\ActiveRecord
{

    const STATUS_CREATED = 1;
    const STATUS_IN_PROGRESS = 2;
    const STATUS_SUCCESS = 3;
    const STATUS_ERROR = 4;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'task_queue';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['client_id', 'status'], 'integer'],
            [['raw_task', 'class', 'action', 'params'], 'string'],
            [['created_at'], 'safe'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'client_id' => 'Client ID',
            'raw_task' => 'Raw Task',
            'class' => 'Class',
            'action' => 'Action',
            'status' => 'Status',
            'created_at' => 'Created At',
            'params' => 'Params'
        ];
    }

    /**
     * Создает задачу
     *
     * @param $class
     * @param $action
     * @param $params
     * @return bool
     */
    public static function createTask($class, $action, $params)
    {
        $task = new self();
        $task->client_id = 1; //TODO должно браться из запросы к бэкенду
        $task->raw_task = json_encode([
            'class' => $class,
            'action' => $action
        ]);
        $task->class = $class;
        $task->action = $action;
        $task->params = $params;
        $task->created_at = date("Y-m-d H:i:s");

        if (!$task->save()) {
            return false;
        }

        return $task->id;
    }

    /**
     * @param bool $insert
     * @return bool
     */
    public function beforeSave($insert)
    {
        $this->params = json_encode($this->params);
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     *
     */
    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub

        $this->params = json_decode($this->params, true);
    }
}
