<?php

namespace common\models;

use Yii;

/**
 * This is the model class for table "site".
 *
 * @property integer $id
 * @property string $name
 * @property string $db_name
 * @property integer $unix_user_id
 * @property UnixUser $unixUser
 * @property Domain $domains
 * @property Backup $backups
 */
class Site extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'site';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['unix_user_id'], 'integer'],
            [['name', 'db_name'], 'string', 'max' => 255],
            [['name', 'unix_user_id'], 'safe'],
            [['name', 'unix_user_id'], 'required'],
            ['name', function($attribute) {

                // Проверим на дубли
                $isDuplicatesExists = self::find()
                    ->where(['name' => $this->$attribute])
                    ->exists();

                if ($isDuplicatesExists) {
                    $this->addError($attribute, 'Duplicate site name');
                }

                // проверим на символы
                $this->$attribute = strtolower($this->$attribute);

                preg_match('/[a-z,0-9,-]*/', $this->$attribute, $matches);

                if (!isset($matches[0]) || $matches[0] !== $this->$attribute) {
                    $this->addError($attribute, 'Invalid site name');
                }
            }],
            ['unix_user_id', function($attribute) {

                $isUserExist = UnixUser::find()
                    ->where(['id' => $this->$attribute])
                    ->exists();

                if (!$isUserExist) {
                    $this->addError($attribute, 'Unix user not found');
                }
            }]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Name',
            'unix_user_id' => 'Unix user id',
            'db_name' => 'DB name'
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUnixUser()
    {
        return $this->hasOne(UnixUser::className(), ['id' => 'unix_user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDomains()
    {
        return $this->hasMany(Domain::className(), ['site_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getBackups()
    {
        return $this->hasMany(Backup::className(), ['site_id' => 'id']);
    }

    /**
     * @param bool $insert
     * @return bool
     */
    public function beforeSave($insert)
    {
        // придумаем имя БД если это вставка
        if ($insert) {
            $this->db_name = $this->name . '_' . time() . '_db';
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
